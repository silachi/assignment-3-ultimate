

using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;

namespace Assignment_3
{   
   
    internal class Program
    {
            // Disp Student is a function which takes list of objects of class Student as parameter 
            // and print each object inside list with its attributes
           static void DispStud(List<Student> students)
             {
                foreach (var item in students)
                {
                    Console.WriteLine(item.Name + "\t  \t" + item.City + "  \t \t" + item.Gpa);
                }

             }

            static void DispStudent(Dictionary<string, List<Student>> students, string key)
             {
                foreach (var index in students[key])
                {
                    Console.WriteLine(index.Name + "\t" + index.City + "\t" + index.Gpa + "\t" + index.AvgMarks);
                }
             }
            /* A function DispGpaCity having parameters, mydict which is a dictionary   cities is list of cities which are being registered by students
                  grtOrLess3 is also a list whose element are key to dictionary mydict, an element from list of string display with zero index means "GPA" and last parameter k=0 means
                  take first element of grtOrLess3 which is " >3" in case of cities k=1, cities[k] = Rawalpindi
                  will help to get dictionary using key from list*/
            static void DispGpaCity(Dictionary<string, List<Student>> mydict, List<string> cities, List<string> grtOrLess3, string display, int k)
              {    

                 int i;
                 string key="0";
                 int loop=1;
    
                        if (display.ToLower() == "gpa")
                        {
                            Console.WriteLine("\nSorted List of Students with {0} or equal to 3.00 CGPA are\n", grtOrLess3[k]);                
                        
                            loop =  cities.Count;
                        }
                        else if (display.ToLower() == "cities")
                        {
                            Console.WriteLine("\nSorted List of Students that are from {0}\n", cities[k]);
                        
                            loop = grtOrLess3.Count;
                        }
              

                        for (i = 0; i < loop; i++)
                        {
                            if (display.ToLower() == "gpa")
                            {
                                key = cities[i] + grtOrLess3[k];
                            }
                            else if (display.ToLower() == "cities")
                            {
                                key = cities[k] + grtOrLess3[i];
                                
                            }
                           
                            foreach (var item in mydict[key])
                            {
                                Console.WriteLine(item.Name + "\t \t" + item.City + "  \t \t" + item.Gpa);
                            }
        
                       }
           
                }

        static void Main(string[] args)
        {
      

            // Task 01
            // The TIME COMPLEXITY of task O(k), k=15
             
            List<Student> students = new List<Student>();
           
            // 01
            Student studObj = new Student("Umar", "Rawalpindi", 3.85);
            students.Add(studObj);

            // 02
            students.Add(new Student("Hussain", "Lahore", 3));

            // 03
            students.Add(new Student("Hisham", "Lahore", 3.5));

            // 04
            students.Add(new Student("Rauf", "Rawalpindi", 2.9));

            // 05
            students.Add(new Student("Hamza", "Quetta", 3.2));

            // 06
            students.Add(new Student("Fahad", "Multan", 2.5));

            // 07
            students.Add(new Student("Talha", "Quetta", 3.3));

            // 08
            students.Add(new Student("Razzaq", "Lahore", 2.6));

            // 09
            students.Add(new Student("Zaheer", "Rawalpindi", 2.7));

            // 10
            students.Add(new Student("Ahmed", "Lahore", 3.5));

            // 11
            students.Add(new Student("Asif", "Rawalpindi", 3.8));

            // 12
            students.Add(new Student("Amir", "Rawalpindi", 2.7));

            // 13
            students.Add( new Student("Kashif", "Multan", 4));

            // 14
            students.Add(new Student("Hafeez", "Lahore", 3.44));

            // 15
            students.Add(new Student ("Khalil", "Lahore", 3.2));
            
            //  A dictionary created to store data in it, later on it will given constant runtime
            //  A list will be stored for each keyvalue
            Dictionary <string,List<Student>> mydict = new Dictionary<string,List<Student>>();

            //  A list with name of cities used by students created to organize the data 
            List<string> cities = new List<string>() { "Lahore", "Rawalpindi", "Quetta", "Multan" };

           //  studentAbove will store the data of students having GPA greter than equal to 3 for given city taken from list of cities
            List<Student> studentAbove = new List<Student>();

            //  studentAbove will store the data of students having GPA less than 3 for given city taken from list of cities
            List<Student> studentBelow = new List<Student>();

            //  To grtOrLess3 will help to make key value which will contcatenate city name and <3 or city name and >3
            //  It will to organize date with particular name of keyvalue
            List<String> grtOrLess3 = new List<string>() { "> 3","< 3" };

            List<String> grtOrLess90 = new List<string>() { " >= 90", "  <= 90" };

            //  Creating two list avgListGreat will store student with marks>= 3 and avg project marks >=90
            //  Creating two list avgListLess will store student with marks<= 3 and avg project marks >=90
            List<Student> avgListGreat = new List<Student>();
            List<Student> avgListLess = new List<Student>();
            
            List<String> display = new List<string>() { "GPA", "cities" };


            //  printing stored data in the list
            Console.WriteLine("----------------------------Task 01----------------------");
            Console.WriteLine("Name" + "\t  \t" + "City" + "  \t \t \t" + "GPA");
            //  A function DispStud called by passing students (which is list of Objects of class Student)
            DispStud(students);





            
            //  Nested for and if statement used to store the data taken from list in a such way that 
            //  after each inner loop list is stored for given city and >3 in studenAbove, which is passed to keyvalue concatenated by adding string cityname and string ">3"
            //  similarly it was done for studentBelow
            //  studentAbove and studentBelow, for these names address was changed, as old address was given to dictionary
            for (int i = 0; i < cities.Count; i++)
            {
                for (int z = 0; z < students.Count; z++)
                {

                      if (students[z].City == cities[i] && students[z].Gpa >=3)
                    {
                        studentAbove.Add(students[z]);
                        
                    }
                     else  if(students[z].City == cities[i] && students[z].Gpa < 3)
                    {
                        studentBelow.Add(students[z]);
                      
                    }
                    
                }
                

                mydict.Add(cities[i] + grtOrLess3[0], studentAbove);
                mydict.Add(cities[i] + grtOrLess3[1], studentBelow);
                studentAbove = new List<Student>();
                studentBelow = new List<Student>();

            }

                                                
            // Task 2
            // TIME COMPLEXITY of task 2 is O(k)=60, k=cities * (total candidates), cities=4 and (total candidates)=15
            Console.WriteLine("----------------------------Task 02----------------------");
            DispGpaCity(mydict, cities, grtOrLess3, display[0], 0);
            /* A function DispGpaCity called by passing parameters, mydict which is a dictionary   cities is list of cities which are being registered by students
               grtOrLess3 is also a list whose element are key to dictionary mydict, an element from list of string display with zero index means "GPA" and last parameter 0
               will help to get dictionary using key from list*/
                                                                    

            
            // Task 3
            // TIME COMPLEXITY for task 3 is O(k), k=40, k=city * (gpa greater than 3), city =10 and (gpa greater than 3) =10
            Console.WriteLine("----------------------------Task 03----------------------");
            Console.WriteLine("Name" + "\t  \t" + "City" + "  \t \t \t" + "GPA");
            double marksAssign1, marksAssign2, avgMarks;
            /* In task 3 student only having gpa>3 will be assigned marks
                , user will enter marks of assignment 1 and assignment 2, which will be stored and their will be taken and stored in avgMarks
               if the average were greater then 90 a overloading constructor with 4 parameter will be created and with other 3 attributes avgMarks will
               also be stored in the object, StudObj will be added to anotherlist (avgListGreat) of class Student. else again object will be created (given different memory and stored in 
               in list(avgListLess) of class Student
               In each object object will be newed to change memory addres other was list at the end will contain same element at each position*/   
                         
            for (int i = 0; i < cities.Count; i++)
            {

                foreach (var index in mydict[cities[i] + grtOrLess3[0]])
                {
             
                    Console.WriteLine("\n"+index.Name + "\t \t" + index.City + "  \t \t" + index.Gpa);
                    Console.Write("\n Kindly enter marks of Assignment 1 = ");
                    marksAssign1 = Convert.ToDouble(Console.ReadLine());
                    Console.Write(" Kindly enter marks of Assignment 2 = ");
                    marksAssign2 = Convert.ToDouble(Console.ReadLine());
                    Console.WriteLine("_______________________________________________________");
                    avgMarks = ((marksAssign1 + marksAssign2) / 2);
                    if (avgMarks >= 90)
                    {
                        studObj = new Student(index.Name, index.City, index.Gpa, avgMarks);
                        avgListGreat.Add(studObj);
                    }
                    else
                    {
                        studObj = new Student(index.Name, index.City, index.Gpa, avgMarks);
                        avgListLess.Add(studObj);
                     }
                }
            }
              // Task 4
              // TIME COMPLEXITY of task 4 is O(k), k=10 
              /* As grtOrLess90 list contained keys to dictionary for student having number greater or less than 90 marks
                 avgListGreat is stored with key =  " >= 90 and avgListLess is Stored with key = " <90 "*/
                     mydict.Add(grtOrLess90[0], avgListGreat);
                     mydict.Add(grtOrLess90[1], avgListLess);
                  
                     Console.WriteLine("\n\nStudents whose marks are greater than or equal to 90");
                     Console.WriteLine("----------------------------Task 04----------------------");
            
                     DispStudent(mydict,grtOrLess90[0]);
              /* A function DispStudent called with two parameter, first the dictionary mydict and a key " >=90" by giving first element of grtOrLess90[0]*/
            // Task 5
            // TIME COMPLEXITY of task 5 is O(k), k=40, k= (gpa greater than 3)*(cities), (gpa greater than 3)=10 and cities=4;
                     Console.WriteLine("----------------------------Task 05----------------------");
                     DispGpaCity(mydict, cities, grtOrLess3, display[1], 1);
              /* A function DispGpaCity called by passing parameters, mydict which is a dictionary   cities is list of cities which are being registered by students
                 grtOrLess3 is also a list whose element are key to dictionary mydict last parameter 1 will help to get dictionary using key from list*/
             
                                    // Task 6
             // TIME COMPLEXITY of task 6, O(k), k=10 as only ten students are there 
                Console.WriteLine("----------------------------Task 06----------------------");
              // avgListGreat sorted using the a object attribute avgMarks in list
                List<Student> avgListSort = avgListGreat.OrderByDescending(o => o.AvgMarks).ToList();
              // sorted list added to dictionary with same key " >90 "
                mydict[grtOrLess90[0]]=avgListSort;
              // A function called to display objects inside dictionary with key " >90"
              // first parameter is dictionary and secnd is its key
                DispStudent(mydict, grtOrLess90[0]);
                  
               

            Console.ReadLine();

        }
    }
}




































// class candidate now


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Assignment_3
{
    public class Student
    {
        private string name;
        private string city;
        private double gpa;
        private double avgMarks;


        //  Constructor will be used to set values of name, city and gpa
        public Student(string name, string city, double gpa)
        {
            this.name = name;
            this.city = city;
            this.gpa = gpa;

        }

        // overloading
        public Student(string name, string city, double gpa, double avgMarks)
        {
            this.name = name;
            this.city = city;
            this.gpa = gpa;
            this.avgMarks = avgMarks;
        }
        // get will be used to get value of names, city and gpa out of this class
        public string Name
        {
            get { return name; }
        }
        public string City
        {
            get { return city; }
        }
        public double Gpa
        {
            get { return gpa; }
        }
        public double AvgMarks
        {
            get { return avgMarks; }
            set { avgMarks = value; }
        }
    }
    
}
